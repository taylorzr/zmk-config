/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define SYM     1
#define NAV     2

/ {
    combos {
        compatible = "zmk,combos";
        combo_copy {
            timeout-ms = <50>;
            key-positions = <2 3>; // fp
            bindings = <&kp LG(C)>;
        };
        combo_del {
            timeout-ms = <50>;
            key-positions = <3 4>; // pb
            bindings = <&kp DEL>;
        };
        combo_caps_word {
            timeout-ms = <50>;
            key-positions = <2 13>; // ft
            bindings = <&caps_word>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <22 23>; // cd
            bindings = <&kp TAB>;
        };
        combo_play {
            timeout-ms = <50>;
            key-positions = <6 7>; // lu
            bindings = <&kp C_PP>;
        };
        combo_next {
            timeout-ms = <50>;
            key-positions = <5 7>; // ju
            bindings = <&kp C_NEXT>;
        };
        combo_ent {
            timeout-ms = <50>;
            key-positions = <26 27>; // h,
            bindings = <&kp ENTER>;
        };
        combo_reset {
            timeout-ms = <50>;
            key-positions = <4 5>; // bj
            bindings = <&bootloader>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        tm: thumb_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <200>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
        td_par: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LPAR>, <&kp RPAR>;
        };
        td_brc: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBRC>, <&kp RBRC>;
        };
        td_brk: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };
    };

    keymap {
		compatible = "zmk,keymap";

		base_layer {
			bindings = <
				&kp Q  &kp W       &kp F       &kp P  &kp B  &kp J  &kp L  &kp U       &kp Y       &kp SEMI
				&kp A  &hm LALT R  &hm LGUI S  &kp T  &kp G  &kp M  &kp N  &hm LGUI E  &hm LALT I  &kp O
				&kp Z  &kp X       &kp C       &kp D  &kp V  &kp K  &kp H  &kp COMMA   &kp DOT     &kp SLASH
				&tm LCTRL ESC    &tm LSHFT BSPC    &lt SYM SPACE    &lt NAV MINUS
			>;
		};

		sym_layer {
			bindings = <
				&kp N1     &kp N2     &kp N3    &kp N4    &kp N5     &kp N6     &kp N7    &kp N8    &kp N9     &kp N0
				&kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp STAR  &kp EQUAL  &kp PIPE
				&kp TILDE  &kp GRAVE  &kp DQT   &kp SQT   &trans     &kp PLUS   &td_par   &td_brc   &td_brk    &kp BSLH
				&trans    &trans    &trans    &trans
			>;
		};

// TODO: sceenshots
		nav_layer {
			bindings = <
				&kp F1   &kp F2   &kp F3            &kp F4             &kp F5      &kp F6    &kp F7        &kp F8        &kp F9     &kp F10
				&kp F11  &kp F12  &kp LC(LS(LEFT))  &kp LC(LS(RIGHT))  &trans      &kp LEFT  &kp DOWN      &kp UP        &kp RIGHT  &trans
				&reset   &trans   &bt BT_PRV        &bt BT_NXT         &bt BT_CLR  &trans    &kp C_VOL_DN  &kp C_VOL_UP  &trans     &trans
				&trans    &kp RET    &trans    &trans
			>;
		};
	};
};
